# ai_model/train_model.py
import joblib
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# Example threat dataset (you can expand this)
data = pd.DataFrame({
    "ip": [1, 2, 3, 1, 2, 3],  # dummy numerical IPs or hashed
    "status": [200, 404, 500, 403, 301, 502],
    "request_len": [150, 800, 400, 1800, 300, 2200],
    "error_rate": [0.0, 1.0, 0.6, 0.8, 0.0, 1.0],
    "restricted_access": [0, 1, 1, 1, 0, 1],
    "label": [0, 1, 1, 1, 0, 1]  # 1 = threat, 0 = normal
})

X = data.drop(columns=["label"])
y = data["label"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Save model
joblib.dump(model, "ai_model/ai_model.pkl")
print("âœ… AI model trained and saved as ai_model.pkl")
